syntax = "proto3";

package types;

message User {
    string account = 2;
    string nickname = 3;
    bool is_admin = 4;
    bool is_blocked = 5;
    int64 created_at = 6;
    int64 updated_at = 7;
    int64 viewed_at = 8;
}

message ListUsersRequest {
}

message ListUsersResponse {
    repeated User users = 1;
}

message CreateUserRequest {
    string account = 1;
    string password = 2;
    string nickname = 3;
    bool is_admin = 4;
}

message CreateUserResponse {
    User user = 1;
}

message TouchUserRequest {
    string account = 1;
}

message TouchUserResponse {
    User user = 1;
}

message UpdateUserRequest {
    string account = 1;
    bool update_nickname = 2;
    string nickname = 3;
    bool update_password = 4;
    string password = 5;
    bool update_is_admin = 6;
    bool is_admin = 7;
    bool update_is_blocked = 8;
    bool is_blocked = 9;
}

message UpdateUserResponse {
    User user = 1;
}

message AuthenticateUserRequest {
    string account = 1;
    string password = 2;
}

message AuthenticateUserResponse {
    User user = 1;
}

message GetUserRequest {
    string account = 1;
}

message GetUserResponse {
    User user = 1;
}

service UserService {
    rpc ListUsers (ListUsersRequest) returns (ListUsersResponse) {
    }

    rpc CreateUser (CreateUserRequest) returns (CreateUserResponse) {
    }

    rpc TouchUser (TouchUserRequest) returns (TouchUserResponse) {
    }

    rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse) {
    }

    rpc AuthenticateUser (AuthenticateUserRequest) returns (AuthenticateUserResponse) {
    }

    rpc GetUser (GetUserRequest) returns (GetUserResponse) {
    }
}

message Node {
    string hostname = 1;
    string user = 2;
    string address = 3;
    string source = 4;
    int64 created_at = 5;
}

message ListNodesRequest {
}

message ListNodesResponse {
    repeated Node nodes = 1;
}

message PutNodeRequest {
    string hostname = 1;
    string user = 2;
    string address = 3;
    string source = 4;
}

message PutNodeResponse {
    Node node = 1;
}

message DeleteNodeRequest {
    string hostname = 1;
}

message DeleteNodeResponse {
}

message GetNodeRequest {
    string hostname = 1;
}

message GetNodeResponse {
    Node node = 1;
}

service NodeService {
    rpc ListNodes (ListNodesRequest) returns (ListNodesResponse) {
    }

    rpc PutNode (PutNodeRequest) returns (PutNodeResponse) {
    }

    rpc DeleteNode (DeleteNodeRequest) returns (DeleteNodeResponse) {
    }

    rpc GetNode (GetNodeRequest) returns (GetNodeResponse) {
    }
}

message Key {
    string fingerprint = 1;
    string account = 2;
    string name = 3;
    int64 created_at = 4;
}

message ListKeysRequest {
    string account = 1;
}

message ListKeysResponse {
    repeated Key keys = 1;
}

message CreateKeyRequest {
    string fingerprint = 1;
    string account = 2;
    string name = 3;
}

message CreateKeyResponse {
    Key key = 1;
}

message DeleteKeyRequest {
    string fingerprint = 1;
}

message DeleteKeyResponse {
}

message GetKeyRequest {
    string fingerprint = 1;
}

message GetKeyResponse {
    Key key = 1;
}

service KeyService {
    rpc ListKeys (ListKeysRequest) returns (ListKeysResponse) {
    }

    rpc CreateKey (CreateKeyRequest) returns (CreateKeyResponse) {
    }

    rpc DeleteKey (DeleteKeyRequest) returns (DeleteKeyResponse) {
    }

    rpc GetKey (GetKeyRequest) returns (GetKeyResponse) {
    }
}
